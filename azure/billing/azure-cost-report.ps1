<#
.SYNOPSIS
    Generates a 12-month actual + forecast cost report and budget summary
    Supports three scoping modes: ResourceIds, ResourceGroups, Tags

.EXAMPLE
    .\azure-cost-report.ps1 -Mode Tags -TagName Website -TagValues SiteA,SiteB
#>

param(
    [Parameter(Mandatory=$true)]
    [ValidateSet("ResourceIds","ResourceGroups","Tags")]
    [string]   $Mode,

    # ---- ResourceIds mode ----
    [string[]] $ResourceIds,

    # ---- ResourceGroups mode ----
    [string[]] $ResourceGroups,

    # ---- Tag mode ----
    [string]   $TagName      = "Website",
    [string[]] $TagValues,

    # ---- Common options ----
    [string]   $SubscriptionId,
    [string]   $Currency     = "AUD",
    [ValidateRange(1,24)]
    [int]      $Months       = 12,
    [string]   $ReportPath   = "$PSScriptRoot\azure-hosting-cost-report.md"
)

#--------------------------- Guardrails ---------------------------------------
if (-not $SubscriptionId) {
    throw "SubscriptionId is required."
}
switch ($Mode) {
    "ResourceIds"     { if (-not $ResourceIds)     { throw "-ResourceIds required." } }
    "ResourceGroups"  { if (-not $ResourceGroups)  { throw "-ResourceGroups required." } }
    "Tags"            { if (-not $TagValues)       { throw "-TagValues required." } }
}

#--------------------------- Az login / context -------------------------------
Import-Module Az -MinimumVersion 14.0 -ErrorAction Stop
Select-AzSubscription -SubscriptionId $SubscriptionId

$Scope     = "/subscriptions/$SubscriptionId"
$today     = Get-Date
$from      = ($today.AddMonths(-$Months)).ToString("yyyy-MM-01T00:00:00Z")
$to        = ($today.AddMonths(0)).ToString("yyyy-MM-01T00:00:00Z")

#--------------------------- Build cost filter --------------------------------
$siteFilter = switch ($Mode) {
    "ResourceIds" {
        @{
            dimensions = @{
                name     = "ResourceId"
                operator = "In"
                values   = $ResourceIds
            }
        }
    }
    "ResourceGroups" {
        @{
            dimensions = @{
                name     = "ResourceGroupName"
                operator = "In"
                values   = $ResourceGroups
            }
        }
    }
    "Tags" {
        @{
            tag = @{
                name     = $TagName
                operator = "In"
                values   = $TagValues
            }
        }
    }
}

#--------------------------- Helper: run cost query ---------------------------
$aggregation = @{ totalCost = @{ name = "Cost"; function = "Sum" } }

function Invoke-CostQuery {
    param($Type,$Granularity)
    $body = @{
        type       = $Type
        timeframe  = "Custom"
        timePeriod = @{ from = $from; to = $to }
        dataset    = @{
            granularity = $Granularity
            aggregation = $aggregation
            filter      = $siteFilter
        }
        currency   = $Currency
    } | ConvertTo-Json -Depth 10
    Invoke-AzCostManagementQuery -Scope $Scope -Definition $body
}

#--------------------------- Actual & forecast --------------------------------
$actual    = Invoke-CostQuery -Type "ActualCost"  -Granularity "Month"
$forecast  = Invoke-CostQuery -Type "Forecast"    -Granularity "None"

$monthTotals  = $actual.properties.rows | ForEach-Object { [double]$_[1] }
$annualTotal  = ($monthTotals | Measure-Object -Sum).Sum
$monthlyAvg   = [math]::Round($annualTotal / $Months,2)
$forecastTotal= [double]$forecast.properties.rows[0][1]

#--------------------------- Budgets ------------------------------------------
$budgets = Get-AzConsumptionBudget -Scope $Scope

#--------------------------- Markdown report ----------------------------------
$budgetSection = if ($budgets) {
    $budgets | ForEach-Object {
        "- **$($_.Name)** – $($_.Amount) $Currency, resets $($_.TimeGrain) (alerts: $($_.Notifications.Count))"
    } | Out-String
} else {
    "_No budgets configured on this subscription._"
}

$md = @"
# Azure Hosting Cost Report  –  $(Get-Date -f yyyy-MM-dd)

| Metric | Value (${Currency}) |
|--------|--------------------:|
| **Actual cost (last $Months months)** | {0:N2} |
| **Average per month** | {1:N2} |
| **Azure forecast (next $Months mo)** | {2:N2} |

## Budgets Defined for Subscription
$budgetSection

---

*Scope mode:* **$Mode**  

*Generated by azure-cost-report.ps1*
"@ -f $annualTotal,$monthlyAvg,$forecastTotal

$md | Set-Content -Encoding utf8 -Path $ReportPath
Write-Host "✅ Report written to $ReportPath"
